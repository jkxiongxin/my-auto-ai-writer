[tool.poetry]
name = "ai-novel-generator"
version = "0.1.0"
description = "AI智能小说生成器概念验证版本"
authors = ["AI Novel Generator Team <team@ai-novel-generator.com>"]
readme = "README.md"
packages = [{include = "src"}]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.104.1"
uvicorn = {extras = ["standard"], version = "^0.24.0"}
pydantic = "^2.5.0"
sqlalchemy = "^2.0.23"
alembic = "^1.12.1"
httpx = "^0.25.2"
aiofiles = "^23.2.1"
python-multipart = "^0.0.6"
jinja2 = "^3.1.2"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
python-dotenv = "^1.0.0"
openai = "^1.3.7"
# tiktoken = "^0.5.2"  # 暂时注释掉，需要Rust编译器
requests = "^2.31.0"
aiohttp = "^3.9.1"
asyncio-mqtt = "^0.16.1"
celery = "^5.3.4"
redis = "^5.0.1"
prometheus-client = "^0.19.0"
structlog = "^23.2.0"
rich = "^13.7.0"
pydantic-settings = "^2.9.1"
psutil = "^7.0.0"
aiosqlite = "^0.21.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
pytest-mock = "^3.12.0"
pytest-xdist = "^3.5.0"
black = "^23.11.0"
flake8 = "^6.1.0"
mypy = "^1.7.1"
isort = "^5.12.0"
pre-commit = "^3.6.0"
bandit = "^1.7.5"
safety = "^2.3.5"
coverage = "^7.3.2"
hypothesis = "^6.92.1"
factory-boy = "^3.3.0"
faker = "^20.1.0"
freezegun = "^1.2.2"
responses = "^0.24.1"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.5.3"
mkdocs-material = "^9.4.10"
mkdocs-mermaid2-plugin = "^1.1.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "tests.*",
]
ignore_errors = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=85",
]
testpaths = ["tests"]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "performance: Performance tests",
    "validation: Validation tests",
    "slow: Slow running tests",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]

[tool.bandit]
exclude_dirs = ["tests", "venv"]
skips = ["B101", "B601"]